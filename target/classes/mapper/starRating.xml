<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="mapper.starRating">
 	<resultMap id ="strResult" type="StarRatingDTO">
	 	<result property="ratingNO" column="ratingNO" />
	    <result property="movie_id" column="movie_id" />
	    <result property="rating" column="rating" />
	    <result property="member_id" column="member_id" />
	    <result property="nickname" column="nickname" />
	    <result property="detailOST" column="detailOST" />
	    <result property="detailDirection" column="detailDirection" />
	    <result property="detailVisual" column="detailVisual" />
	    <result property="detailActing" column="detailActing" />
	    <result property="detailStory" column="detailStory" />
 	</resultMap>
 	
 	<resultMap id="ratingCountResultMap" type="java.util.HashMap">
	    <result column="rating" property="rating" />
	    <result column="rating_count" property="ratingCount" />
	</resultMap>
 	
 	
 	<!--별점 등록-->
 	<insert id="insertStarRating" parameterType="StarRatingDTO">
 		<![CDATA[
 			insert into starrating (movie_id, rating, member_id, nickname, detailOST, detailDirection, detailVisual, detailActing, detailStory)
 			VALUES(#{movie_id}, #{rating}, #{member_id}, #{nickname}, #{detailOST}, #{detailDirection}, #{detailVisual}, #{detailActing}, #{detailStory})
 		]]>
 	</insert>
 	
 	
 	<!-- 별점 삭제  -->
 	<delete id="deleteStarRating" parameterType="java.util.Map">
   		<![CDATA[
   			delete from starrating where member_id = #{member_id} AND movie_id = #{movie_id}
   		]]>
   	
   	</delete>
   	
   	<!-- 별점 수정  -->
   	<update id="updateStarRating" parameterType="starRatingDTO">
   		<![CDATA[
   			update starrating set rating=#{rating}
   			where member_id = #{member_id} AND movie_id = #{movie_id}
   		
   		]]>
   	</update>
   	
   	<!--  상세 별점 수정  -->
   	<update id="updateDetailStarRating" parameterType="starRatingDTO">
   		<![CDATA[
   			update starrating set rating=#{rating}, detailOST=#{detailOST}, detailDirection = #{detailDirection}, detailVisual = #{detailVisual}, detailActing = #{detailActing}, detailStory = #{detailStory} 
   			where member_id = #{member_id} AND movie_id = #{movie_id}
   		
   		]]>
   	
   	</update>
   	
   	<select id="selectStarRatingById" parameterType ="String" resultMap="strResult">
   		<![CDATA[
   			select * from starrating where member_id = #{member_id} 
   		]]>
   	</select>
   	
   	<select id="selectStarRatingByMovie" parameterType ="String" resultMap="strResult">
   		<![CDATA[
   			select * from starrating where movie_id = #{movie_id} 
   		]]>
   	</select>
   	
   	
   	<select id="selectStarRatingByRatingNO" parameterType = "int" resultMap="strResult">
   		<![CDATA[
   			select * from starrating where ratingNO = #{ratingNO}
   		]]>
   	
   	</select>
 	
 	<!-- 평균 별점  -->
 	<select id="avgStarRating" parameterType ="String" resultType="java.lang.Double">
 		<![CDATA[
 			select AVG(rating) AS average_rating FROM starrating WHERE movie_id = #{movie_id};
 		]]>
 	</select>
 	
 	<!-- 별점 가져오기  // select 로 null 값을 받을 경우 resultType 을 int 로 받으면 오류 발생함 . --> 
 	<select id="checkStarRating" parameterType ="java.util.Map" resultType="java.lang.Double">   
 		<![CDATA[
 			select rating from starrating where movie_id = #{movie_id} AND member_id = #{member_id}
 		]]>
 	</select>
 	
 	
 	<!-- 상세 별점 삭제  //  update 로 상세 별점 결과들 전부 0 으로 업데이트  -->
 	<update id="deleteDetailStarRating" parameterType = "java.util.Map">
 		<![CDATA[
 			UPDATE starrating
			SET detailOST = 0, detailDirection = 0, detailVisual = 0, detailActing = 0, detailStory = 0
			WHERE movie_id = #{movie_id} AND member_id = #{member_id}
 		]]>
 	
 	</update>
 	
 	<!-- 상세 별점 가져오기 // 상세 별점 가져와서 첫 로딩때 별점 채워두는 용  -->
 	<select id="checkDetailStarRating" parameterType ="java.util.Map" resultMap="strResult">   
 		<![CDATA[
 			select * from starrating where movie_id = #{movie_id} AND member_id = #{member_id}
 		]]>
 	</select>
 	
 	<select id="avgStarRatingByMember_id" parameterType ="String" resultType="java.lang.Double">
 		<![CDATA[
 			select AVG(rating) AS average_rating FROM starrating WHERE member_id = #{member_id};
 		]]>
 	</select>
 	
 	<select id="countStarRatingByMember_id" parameterType = "String" resultType="java.lang.Integer">
 		<![CDATA[
 			select count(*) from starrating where member_id = #{member_id};
 		]]>
 	</select>
 	
 	<select id="maxStarRatingByMember_id" parameterType = "String" resultType="map">
 		<![CDATA[
 			select rating, count(*) as count from starrating where member_id = #{member_id} GROUP BY rating ORDER BY count DESC LIMIT 1;
 		]]>
 	</select>
 	
 	<select id="tasteMyStarRating" parameterType="String" resultMap="ratingCountResultMap">
 		<![CDATA[
 			  	SELECT ratings.rating, COALESCE(rating_count, 0) AS rating_count
				FROM (
				    SELECT '0.5' AS rating UNION SELECT '1' AS rating UNION SELECT '1.5' AS rating UNION SELECT '2' AS rating
				    UNION SELECT '2.5' AS rating UNION SELECT '3' AS rating UNION SELECT '3.5' AS rating UNION SELECT '4' AS rating
				    UNION SELECT '4.5' AS rating UNION SELECT '5' AS rating
				) AS ratings
				LEFT JOIN (
				    SELECT rating, COUNT(*) AS rating_count
				    FROM starrating
				    WHERE member_id = #{memberId}
				    GROUP BY rating
				) AS counts
				ON ratings.rating = counts.rating
				ORDER BY ratings.rating;
 		]]>
 	</select>
 	
 	<select id="countWatchTime" parameterType="String" resultType="java.lang.Integer">
 		<![CDATA[
 			Select sum(movielist.showTm) as total_show_time
			from starrating 
			left join movielist ON starrating.movie_id = movielist.movie_id
			where member_id = #{member_id};
 		]]>
 	</select>
 	
 	<select id="tasteMovieNation" parameterType="String" resultType="java.util.Map" >
 		<![CDATA[
 			Select movielist.movieNation as movieNation, COUNT(*) AS count
			from starrating 
			left join movielist ON starrating.movie_id = movielist.movie_id
			where member_id = #{member_id}
			GROUP BY movielist.movieNation
			ORDER BY count DESC;
 		]]>
 	</select>
 	
 	<select id="tasteMovieDirector" parameterType="String" resultType="java.util.Map">
 		<![CDATA[
 			Select movielist.movieDirector as movieDirector, COUNT(*) AS count
			from starrating 
			left join movielist ON starrating.movie_id = movielist.movie_id
			where member_id = #{member_id}
			GROUP BY movielist.MovieDirector
			HAVING COUNT(*) >= 2
			ORDER BY count DESC
			LIMIT 10;
 		]]>
 	</select>
 	
 	<select id="tasteMovieActor" parameterType="String" resultType="java.lang.String">
 		<![CDATA[
 			Select movielist.movieActor as movieActor
			from starrating 
			left join movielist ON starrating.movie_id = movielist.movie_id
			where member_id = #{member_id}
 		]]>
 	</select>
 	
 	
 	<select id="tasteMovieGenre" parameterType="String" resultType="java.lang.String">
 		<![CDATA[
 			Select movielist.movieGenre as movieGenre
			from starrating 
			left join movielist ON starrating.movie_id = movielist.movie_id
			where member_id = #{member_id}
		]]>
 		
 	</select>
 </mapper> 
   